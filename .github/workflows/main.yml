name: CI/CD backend 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: backend
      FOLDER_NAME: LegalTrace
      DB_NAME: legalcont
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Output appsettings.json before substitution
        run: cat '${{ env.FOLDER_NAME }}/appsettings.json'
      
      - name: Editing connectionString       
        run: |
          export WEB_API_DATABASE=${{ secrets.CONNECTION_STRING }}
          envsubst < '${{ env.FOLDER_NAME }}/appsettings.json' > '${{ env.FOLDER_NAME }}/appsettings.subst.json'
          mv '${{ env.FOLDER_NAME }}/appsettings.subst.json' '${{ env.FOLDER_NAME }}/appsettings.json'

      - name: Output appsettings.json after substitution
        run: cat '${{ env.FOLDER_NAME }}/appsettings.json'

      - name: Build Docker Image
        run: |
          cat '${{ env.FOLDER_NAME }}/appsettings.json'
          docker build --build-arg APP_NAME=${{ env.FOLDER_NAME }} -t ${{env.IMAGE_NAME}} .
        
      - name: Push Docker Image to Registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag ${{env.IMAGE_NAME}} ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~
            docker-compose -f docker-compose.backend.yml down
            docker-compose -f docker-compose.backend.yml pull
            docker-compose -f docker-compose.backend.yml up -d
            echo "Container deployed"
  migration:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Migrate to Postgres
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~
            docker cp backend:/app/script/script.sql ./script/script.sql
            dropdb -U postgres ${{ env.DB_NAME }}
            createdb -U postgres ${{ env.DB_NAME }}
            psql -U postgres -d ${{ env.DB_NAME }} -f ./script/script.sql 
            systemctl restart postgresql
            echo "DB restored"
  
